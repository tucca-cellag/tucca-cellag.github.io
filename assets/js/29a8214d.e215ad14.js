"use strict";(self.webpackChunktucca_cellag=self.webpackChunktucca_cellag||[]).push([[420],{1470:(e,n,s)=>{s.d(n,{A:()=>w});var r=s(6540),i=s(4164),t=s(3104),l=s(6347),o=s(205),a=s(7485),c=s(1682),d=s(679);function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:s}=e;return(0,r.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:s,default:r}})=>({value:e,label:n,attributes:s,default:r}))}(s);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}function m({value:e,tabValues:n}){return n.some(n=>n.value===e)}function p({queryString:e=!1,groupId:n}){const s=(0,l.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,a.aZ)(i),(0,r.useCallback)(e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace({...s.location,search:n.toString()})},[i,s])]}function x(e){const{defaultValue:n,queryString:s=!1,groupId:i}=e,t=h(e),[l,a]=(0,r.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find(e=>e.default)??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:t})),[c,u]=p({queryString:s,groupId:i}),[x,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,i]=(0,d.Dv)(n);return[s,(0,r.useCallback)(e=>{n&&i.set(e)},[n,i])]}({groupId:i}),j=(()=>{const e=c??x;return m({value:e,tabValues:t})?e:null})();(0,o.A)(()=>{j&&a(j)},[j]);return{selectedValue:l,selectValue:(0,r.useCallback)(e=>{if(!m({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);a(e),u(e),f(e)},[u,f,t]),tabValues:t}}var f=s(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=s(4848);function v({className:e,block:n,selectedValue:s,selectValue:r,tabValues:l}){const o=[],{blockElementScrollPositionUntilNextRender:a}=(0,t.a_)(),c=e=>{const n=e.currentTarget,i=o.indexOf(n),t=l[i].value;t!==s&&(a(n),r(t))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const s=o.indexOf(e.currentTarget)+1;n=o[s]??o[0];break}case"ArrowLeft":{const s=o.indexOf(e.currentTarget)-1;n=o[s]??o[o.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:l.map(({value:e,label:n,attributes:r})=>(0,g.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...r,className:(0,i.A)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":s===e}),children:n??e},e))})}function k({lazy:e,children:n,selectedValue:s}){const t=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=t.find(e=>e.props.value===s);return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:t.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s}))})}function b(e){const n=x(e);return(0,g.jsxs)("div",{className:(0,i.A)("tabs-container",j.tabList),children:[(0,g.jsx)(v,{...n,...e}),(0,g.jsx)(k,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,g.jsx)(b,{...e,children:u(e.children)},String(n))}},3093:(e,n,s)=>{s.d(n,{A:()=>l});s(6540);var r=s(4164),i=s(8774),t=s(4848);function l({size:e=null,outline:n=!1,variant:s="primary",block:l=!1,disabled:o=!1,className:a,style:c,link:d,label:u}){const h=e?{sm:"sm",small:"sm",lg:"lg",large:"lg",medium:null}[e]:"",m=h?`button--${h}`:"",p=n?"button--outline":"",x=s?`button--${s}`:"",f=l?"button--block":"",j=o?"disabled":"",g=o?null:d;return(0,t.jsx)(i.A,{to:g,children:(0,t.jsx)("button",{className:(0,r.A)("button",m,p,x,f,j,a),style:c,role:"button","aria-disabled":o,children:u})})}},3964:(e,n,s)=>{s.d(n,{A:()=>t});s(6540);var r=s(4164),i=s(4848);const t=({className:e,style:n,children:s,textAlign:t,variant:l,italic:o=!1,noDecoration:a=!1,transform:c,breakWord:d=!1,truncate:u=!1,weight:h})=>{const m=t?`text--${t}`:"",p=l?`text--${l}`:"",x=o?"text--italic":"",f=a?"text-no-decoration":"",j=c?`text--${c}`:"",g=d?"text--break":"",v=u?"text--truncate":"",k=h?`text--${h}`:"";return(0,i.jsx)("div",{className:(0,r.A)("card__body",e,m,j,p,x,f,g,v,k),style:n,children:s})}},4157:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"tucca-rna-seq/running","title":"Running tucca-rna-seq","description":"This guide covers how to execute the tucca-rna-seq workflow using different","source":"@site/docs/tucca-rna-seq/running.mdx","sourceDirName":"tucca-rna-seq","slug":"/tucca-rna-seq/running","permalink":"/tucca-rna-seq/running","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"benjibromberg","lastUpdatedAt":1758734362000,"frontMatter":{"title":"Running tucca-rna-seq"},"sidebar":"tucca_rna_seq","previous":{"title":"Configuring tucca-rna-seq for your Analysis","permalink":"/tucca-rna-seq/install-and-config/configuration"},"next":{"title":"Functional Enrichment Analysis","permalink":"/tucca-rna-seq/enrichment-analysis"}}');var i=s(4848),t=s(8453),l=(s(1470),s(9365),s(8774),s(3093));s(9959),s(9223),s(3964),s(7261),s(7138),s(9823);const o={title:"Running tucca-rna-seq"},a="Running the tucca-rna-seq Workflow",c={},d=[{value:"Quick Start",id:"quick-start",level:2},{value:"Using Execution Profiles",id:"using-execution-profiles",level:2},{value:"Workflow Execution Steps",id:"workflow-execution-steps",level:2},{value:"1. Configuration Validation",id:"1-configuration-validation",level:3},{value:"2. Create Software Environments",id:"2-create-software-environments",level:3},{value:"3. Dry Run",id:"3-dry-run",level:3},{value:"4. Execution",id:"4-execution",level:3},{value:"Monitoring and Debugging",id:"monitoring-and-debugging",level:2},{value:"Job Monitoring",id:"job-monitoring",level:3},{value:"Understanding Log Files",id:"understanding-log-files",level:3},{value:"Failed Jobs",id:"failed-jobs",level:3},{value:"Common Issues",id:"common-issues",level:3},{value:"Resource Management",id:"resource-management",level:2},{value:"Memory and CPU Allocation",id:"memory-and-cpu-allocation",level:3},{value:"Software Environment Caching",id:"software-environment-caching",level:3},{value:"Storage Requirements",id:"storage-requirements",level:3},{value:"Runtime Estimation",id:"runtime-estimation",level:3},{value:"Advanced Execution Options",id:"advanced-execution-options",level:2},{value:"Parallel Execution",id:"parallel-execution",level:3},{value:"Selective Execution",id:"selective-execution",level:3},{value:"Resume and Restart",id:"resume-and-restart",level:3},{value:"Output and Results",id:"output-and-results",level:2},{value:"Main Outputs",id:"main-outputs",level:3},{value:"Output Organization",id:"output-organization",level:3},{value:"Post-Analysis Interactive Tools",id:"post-analysis-interactive-tools",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Profile Issues",id:"profile-issues",level:3},{value:"Execution Problems",id:"execution-problems",level:3},{value:"Getting Help",id:"getting-help",level:3},{value:"Next Steps",id:"next-steps",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"running-the-tucca-rna-seq-workflow",children:"Running the tucca-rna-seq Workflow"})}),"\n",(0,i.jsxs)(n.p,{children:["This guide covers how to execute the ",(0,i.jsx)(n.code,{children:"tucca-rna-seq"})," workflow using different\nexecution environments and profiles."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,i.jsxs)(n.admonition,{title:"Important: Prepare Environments Before a Dry-Run",type:"tip",children:[(0,i.jsxs)(n.p,{children:["A dry-run (",(0,i.jsx)(n.code,{children:"-np"}),") will fail on the first run if the required software\nenvironments do not yet exist. This is a known issue in Snakemake where it\nattempts to inspect Conda environments inside containers ",(0,i.jsx)(n.em,{children:"before"})," pulling the\ncontainer image (",(0,i.jsx)(n.a,{href:"https://github.com/snakemake/snakemake/issues/1901",children:"#1901"}),",\n",(0,i.jsx)(n.a,{href:"https://github.com/snakemake/snakemake/issues/3038",children:"#3038"}),")."]}),(0,i.jsxs)(n.p,{children:["To prevent this, you must first build all Conda environments and pull all\ncontainer images. The ",(0,i.jsx)(n.code,{children:"--conda-create-envs-only"})," flag conveniently handles\nboth of these tasks at once."]})]}),"\n",(0,i.jsx)(n.p,{children:"Once you've configured your analysis, follow these steps to run the workflow:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# 1. Validate your configuration\nsnakemake --lint --workflow-profile profiles/slurm\n\n# 2. Create all required Conda environments\nsnakemake all --conda-create-envs-only --workflow-profile profiles/slurm\n\n# 3. Test the workflow (dry-run)\nsnakemake all -np --workflow-profile profiles/slurm\n\n# 4. Execute the workflow\nsnakemake all --workflow-profile profiles/slurm\n"})}),"\n",(0,i.jsxs)(n.admonition,{title:"Critical: Maintain a Stable Connection",type:"danger",children:[(0,i.jsxs)(n.p,{children:["When you run Snakemake interactively on a remote machine (like an HPC compute\nnode), the main ",(0,i.jsx)(n.code,{children:"snakemake"})," process acts as the workflow's orchestrator. If your\nSSH connection is interrupted (e.g., your computer sleeps or your Wi-Fi\ndisconnects), this main process will be terminated, and your workflow will fail."]}),(0,i.jsxs)(n.p,{children:["To prevent this, it is ",(0,i.jsx)(n.strong,{children:"highly recommended"})," to run the main execution command\ninside a terminal multiplexer like ",(0,i.jsx)(n.code,{children:"tmux"})," or ",(0,i.jsx)(n.code,{children:"screen"}),". These tools create a\npersistent session on the remote machine that will keep your workflow running\neven if your local connection is lost."]}),(0,i.jsxs)(n.p,{children:["If you cannot use a multiplexer, you must ensure your local machine does not\ngo to sleep. For macOS, we recommend the free utility\n",(0,i.jsx)(n.a,{href:"https://apps.apple.com/us/app/amphetamine/id937984704?mt=12",children:(0,i.jsx)(n.strong,{children:"Amphetamine"})}),"\nto keep your Mac awake for a specified duration."]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"using-execution-profiles",children:"Using Execution Profiles"}),"\n",(0,i.jsxs)(n.p,{children:["Snakemake ",(0,i.jsx)(n.strong,{children:"profiles"})," are a powerful feature that allows you to pre-configure\nthe command-line options for a specific computing environment, such as a local\nworkstation or an HPC cluster. This saves you from typing long, complex\ncommands for every analysis."]}),"\n",(0,i.jsx)(n.admonition,{title:"Profile Versatility",type:"tip",children:(0,i.jsxs)(n.p,{children:["It's important to note that any command-line option available in Snakemake can\nbe set within a profile, making them incredibly versatile. For a full list of\navailable options, see the official ",(0,i.jsx)(n.a,{href:"https://snakemake.readthedocs.io/en/stable/executing/cli.html#all-options",children:"Snakemake CLI documentation"}),"."]})}),"\n",(0,i.jsxs)(n.p,{children:["To use a profile, you simply activate it with the ",(0,i.jsx)(n.code,{children:"--workflow-profile"})," flag:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Use the Slurm profile\nsnakemake all --workflow-profile profiles/slurm\n\n# Use the development profile\nsnakemake all --workflow-profile profiles/slurm-dev\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For a comprehensive guide on what profiles are, which ones are available in this\nworkflow, and how to customize them for your specific needs, please see the\n",(0,i.jsx)(n.a,{href:"./install-and-config/configuration#profile-configuration",children:(0,i.jsx)(n.strong,{children:"Configuration Guide"})}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"workflow-execution-steps",children:"Workflow Execution Steps"}),"\n",(0,i.jsx)(n.h3,{id:"1-configuration-validation",children:"1. Configuration Validation"}),"\n",(0,i.jsx)(n.p,{children:"Before running, validate your configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check for configuration errors\nsnakemake --lint --workflow-profile profiles/slurm\n"})}),"\n",(0,i.jsx)(n.p,{children:"This step:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Validates your ",(0,i.jsx)(n.code,{children:"config.yaml"})," against the JSON schema"]}),"\n",(0,i.jsxs)(n.li,{children:["Checks consistency between ",(0,i.jsx)(n.code,{children:"samples.tsv"})," and ",(0,i.jsx)(n.code,{children:"units.tsv"})]}),"\n",(0,i.jsx)(n.li,{children:"Identifies potential issues before execution"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-create-software-environments",children:"2. Create Software Environments"}),"\n",(0,i.jsx)(n.p,{children:"Before performing a dry-run, it's essential to create the necessary software\nenvironments. This step prevents errors during the dry-run, which needs to\ninspect tools inside containers that may not have been downloaded yet."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Create all Conda environments and pull container images\nsnakemake all --conda-create-envs-only --workflow-profile profiles/slurm\n"})}),"\n",(0,i.jsx)(n.p,{children:"This command will:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Download the main Singularity/Apptainer container image."}),"\n",(0,i.jsx)(n.li,{children:"Create all the isolated Conda environments required by the workflow's rules."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Not"})," run any computational jobs."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-dry-run",children:"3. Dry Run"}),"\n",(0,i.jsx)(n.p,{children:"Test the workflow without executing jobs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Generate execution plan\nsnakemake all -np --workflow-profile profiles/slurm\n"})}),"\n",(0,i.jsx)(n.p,{children:"This step:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Shows which jobs will be executed"}),"\n",(0,i.jsx)(n.li,{children:"Displays the dependency graph"}),"\n",(0,i.jsx)(n.li,{children:"Estimates resource requirements"}),"\n",(0,i.jsx)(n.li,{children:"Identifies any missing inputs or configuration issues"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-execution",children:"4. Execution"}),"\n",(0,i.jsx)(n.p,{children:"Run the complete workflow:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Execute all jobs\nsnakemake all --workflow-profile profiles/slurm\n"})}),"\n",(0,i.jsx)(n.p,{children:"The workflow will:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use the pre-built software environments for each tool"}),"\n",(0,i.jsx)(n.li,{children:"Download reference genomes and annotations"}),"\n",(0,i.jsx)(n.li,{children:"Process your sequencing data through the pipeline"}),"\n",(0,i.jsx)(n.li,{children:"Generate comprehensive analysis results"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"monitoring-and-debugging",children:"Monitoring and Debugging"}),"\n",(0,i.jsx)(n.h3,{id:"job-monitoring",children:"Job Monitoring"}),"\n",(0,i.jsx)(n.p,{children:"When running Snakemake interactively, the main log output will stream directly\nto your terminal."}),"\n",(0,i.jsx)(n.p,{children:"For workflows running on an HPC cluster, you can use the scheduler's native\ncommands in a separate terminal to check the status of submitted jobs. The\ncommand below is an example for a SLURM-managed cluster."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check job status (example for a SLURM cluster)\nsqueue -u $USER\n"})}),"\n",(0,i.jsx)(n.h3,{id:"understanding-log-files",children:"Understanding Log Files"}),"\n",(0,i.jsx)(n.p,{children:"When troubleshooting, it's important to know where to look for information.\nThe workflow generates logs in three primary locations, each serving a\ndifferent purpose:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Main Snakemake Log (",(0,i.jsx)(n.code,{children:".snakemake/log/"}),")"]}),": This directory contains the main\nlog file from the Snakemake process itself. It's useful for debugging\nhigh-level workflow errors related to DAG construction, configuration, or\njob submission."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Cluster Executor Logs (e.g., ",(0,i.jsx)(n.code,{children:".snakemake/slurm_logs/"}),")"]}),": When running on a\ncluster, the executor plugin (like the one for SLURM) generates its own\nlogs for each submitted job. These files capture the raw ",(0,i.jsx)(n.code,{children:"stdout"})," and\n",(0,i.jsx)(n.code,{children:"stderr"})," from the cluster's perspective and are invaluable for debugging\njob submission issues or resource-related failures."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Rule-Specific Logs (",(0,i.jsx)(n.code,{children:"logs/"}),")"]}),": The workflow is designed to capture the\n",(0,i.jsx)(n.code,{children:"stdout"})," and ",(0,i.jsx)(n.code,{children:"stderr"})," from each specific rule into this directory. These are\nthe most important logs for debugging tool-specific errors, such as a problem\nwith a bioinformatics tool's parameters or input files."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"failed-jobs",children:"Failed Jobs"}),"\n",(0,i.jsx)(n.p,{children:"When jobs fail, Snakemake provides commands to help you investigate and recover.\nWhile these can be run manually, it is often more convenient to set them as\ndefaults in your execution profile."}),"\n",(0,i.jsx)(n.admonition,{title:"Enabled by Default in the Slurm Profile",type:"info",children:(0,i.jsxs)(n.p,{children:["The pre-configured ",(0,i.jsx)(n.code,{children:"slurm"})," profile for this workflow already includes the\noptions ",(0,i.jsx)(n.code,{children:"show-failed-logs: true"})," and ",(0,i.jsx)(n.code,{children:"rerun-incomplete: true"}),", automating\nthese recovery steps for you. See the\n",(0,i.jsx)(n.a,{href:"./install-and-config/configuration#profile-examples-from-tucca-rna-seq",children:"Configuration Guide"}),"\nfor details."]})}),"\n",(0,i.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Issue"}),(0,i.jsx)(n.th,{children:"Solution"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Missing dependencies"})}),(0,i.jsx)(n.td,{children:"Check conda environment creation"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Resource limits"})}),(0,i.jsx)(n.td,{children:"Adjust memory/CPU allocation in profile"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"File permissions"})}),(0,i.jsx)(n.td,{children:"Ensure write access to output directories"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Network issues"})}),(0,i.jsx)(n.td,{children:"Check internet connectivity for downloads"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"resource-management",children:"Resource Management"}),"\n",(0,i.jsx)(n.h3,{id:"memory-and-cpu-allocation",children:"Memory and CPU Allocation"}),"\n",(0,i.jsx)(n.p,{children:"Configure resource allocation in your profile:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# profiles/slurm/config.v8+.yaml\ndefault-resources:\n  mem_mb: 32000      # 32GB RAM per job\n  cpus_per_task: 12  # 12 CPU cores per job\n  runtime: 4320      # 4 hours runtime\n\n# Override for specific rules\nset-resources:\n  star_index:\n    mem_mb: 64000    # 64GB RAM for genome indexing\n"})}),"\n",(0,i.jsx)(n.h3,{id:"software-environment-caching",children:"Software Environment Caching"}),"\n",(0,i.jsxs)(n.p,{children:["Creating the workflow's software environments with Conda and downloading the\nSingularity/Apptainer container image can be time-consuming, but this initial\nsetup only needs to be done once. By default, Snakemake caches these\nenvironments in a hidden ",(0,i.jsx)(n.code,{children:".snakemake"})," directory within each project folder."]}),"\n",(0,i.jsx)(n.p,{children:"To avoid rebuilding these environments for every new analysis, you can create a\ncentralized cache that all your projects can share. This has two major benefits:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Saves Time"}),": Subsequent workflow runs will start much faster by reusing\nthe pre-existing environments."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Saves Space"}),": It prevents duplicating many gigabytes of software, which\nis especially important on HPC clusters with home/lab directory storage\nquotas."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To set up a central cache, use the ",(0,i.jsx)(n.code,{children:"--conda-prefix"})," and ",(0,i.jsx)(n.code,{children:"--singularity-prefix"}),"\nflags to point to a shared location, such as a project or scratch directory."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Example of redirecting caches to a shared location\nsnakemake all \\\\\n  --workflow-profile profiles/slurm \\\\\n  --conda-prefix /path/to/shared/conda_envs \\\\\n  --singularity-prefix /path/to/shared/singularity_images\n"})}),"\n",(0,i.jsxs)(n.admonition,{title:"Set Prefixes in a Profile",type:"tip",children:[(0,i.jsx)(n.p,{children:"For convenience, it is best practice to set these paths as default options\nwithin your execution profile."}),(0,i.jsxs)(n.p,{children:["Alternatively, you can set the ",(0,i.jsx)(n.code,{children:"SNAKEMAKE_CONDA_PREFIX"})," and\n",(0,i.jsx)(n.code,{children:"SNAKEMAKE_APPTAINER_PREFIX"})," environment variables in your shell's startup\nfile (e.g., ",(0,i.jsx)(n.code,{children:"~/.bashrc"}),") for a more permanent solution."]})]}),"\n",(0,i.jsx)(n.h3,{id:"storage-requirements",children:"Storage Requirements"}),"\n","\n",(0,i.jsx)(n.h3,{id:"runtime-estimation",children:"Runtime Estimation"}),"\n","\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"advanced-execution-options",children:"Advanced Execution Options"}),"\n",(0,i.jsx)(n.h3,{id:"parallel-execution",children:"Parallel Execution"}),"\n",(0,i.jsx)(n.p,{children:"Control job parallelism:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Limit concurrent jobs\nsnakemake all --workflow-profile profiles/slurm --jobs 50\n\n# Use all available cores locally\nsnakemake all --use-conda --cores all\n"})}),"\n",(0,i.jsx)(n.h3,{id:"selective-execution",children:"Selective Execution"}),"\n",(0,i.jsx)(n.p,{children:"Run specific parts of the workflow:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Run only quality control\nsnakemake fastqc --workflow-profile profiles/slurm\n\n# Run only differential expression\nsnakemake deseq2_wald_per_analysis --workflow-profile profiles/slurm\n\n# Run only enrichment analysis\nsnakemake all_enrichment_analyses --workflow-profile profiles/slurm\n"})}),"\n",(0,i.jsx)(n.h3,{id:"resume-and-restart",children:"Resume and Restart"}),"\n",(0,i.jsx)(n.p,{children:"Handle interrupted workflows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Resume from where you left off\nsnakemake all --workflow-profile profiles/slurm\n\n# Force rerun of specific outputs\nsnakemake all --workflow-profile profiles/slurm --forceall\n\n# Remove all protected and temporary output files\nsnakemake all --delete-all-output --workflow-profile profiles/slurm\n"})}),"\n",(0,i.jsxs)(n.admonition,{title:"Preview Before Deleting",type:"tip",children:[(0,i.jsxs)(n.p,{children:["It is highly recommended to perform a dry-run (",(0,i.jsx)(n.code,{children:"-np"}),") before deleting all\noutputs to see which files will be removed."]}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"snakemake all --delete-all-output -np --workflow-profile profiles/slurm"})})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"output-and-results",children:"Output and Results"}),"\n",(0,i.jsx)(n.h3,{id:"main-outputs",children:"Main Outputs"}),"\n",(0,i.jsx)(n.p,{children:"The workflow generates comprehensive results:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quality Control"}),": FastQC reports, Qualimap analysis"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Alignment"}),": STAR BAM files, alignment statistics"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quantification"}),": Salmon transcript counts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Differential Expression"}),": DESeq2 results, normalized counts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Enrichment Analysis"}),": GO, KEGG, MSigDB, SPIA results"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reports"}),": MultiQC summary, FastQC, Qualimap HTML reports"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"output-organization",children:"Output Organization"}),"\n",(0,i.jsx)(n.p,{children:"Results are organized in a logical structure:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"results/\n\u251c\u2500\u2500 fastqc/           # Quality control reports\n\u251c\u2500\u2500 qualimap/         # RNA-seq quality metrics  \n\u251c\u2500\u2500 salmon/           # Transcript quantification\n\u2514\u2500\u2500 multiqc/          # Summary reports\n\nresources/\n\u251c\u2500\u2500 star/             # STAR alignment results (BAM files)\n\u251c\u2500\u2500 deseq2/           # Differential expression results\n\u251c\u2500\u2500 enrichment/       # Functional enrichment analysis\n\u2514\u2500\u2500 tximeta/          # Transcript quantification metadata\n"})}),"\n",(0,i.jsx)(n.h3,{id:"post-analysis-interactive-tools",children:"Post-Analysis Interactive Tools"}),"\n",(0,i.jsx)(n.p,{children:"After workflow completion, you can use the provided RMarkdown notebooks for additional analysis:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"analysis/pcaExplorer_playground.Rmd"})}),": Principal component analysis"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"analysis/GeneTonic_playground.Rmd"})}),": Enrichment analysis visualization"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": These are separate analysis tools, not part of the Snakemake workflow execution."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"profile-issues",children:"Profile Issues"}),"\n",(0,i.jsx)(n.p,{children:"If profiles don't work as expected:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Check Snakemake version"}),": Ensure you're using v8.27.1 or later"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Verify profile syntax"}),": Check YAML formatting and indentation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Install executor plugins"}),": Ensure required plugins are installed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Check permissions"}),": Verify file and directory permissions"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"execution-problems",children:"Execution Problems"}),"\n",(0,i.jsx)(n.p,{children:"Common execution issues and solutions:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Problem"}),(0,i.jsx)(n.th,{children:"Cause"}),(0,i.jsx)(n.th,{children:"Solution"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Jobs stuck in queue"})}),(0,i.jsx)(n.td,{children:"Resource limits too high"}),(0,i.jsx)(n.td,{children:"Reduce memory/CPU requirements"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:'"Lost" SLURM jobs'})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"sacct"})," accounting issues. You may see messages like:",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)(n.code,{children:"status_of_jobs after sacct is: {}"}),(0,i.jsx)("br",{}),(0,i.jsx)(n.code,{children:"active_jobs_ids_with_current_sacct_status are: {}"}),(0,i.jsx)("br",{}),(0,i.jsx)(n.code,{children:"active_jobs_seen_by_sacct are: {}"}),(0,i.jsx)("br",{}),(0,i.jsx)(n.code,{children:"missing_sacct_status are: set()"})]}),(0,i.jsx)(n.td,{children:"Stop and restart the workflow; Snakemake will re-evaluate job status and resume."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Environment creation fails"})}),(0,i.jsx)(n.td,{children:"Conda/Mamba issues"}),(0,i.jsx)(n.td,{children:"Check conda installation and channels"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Container errors"})}),(0,i.jsx)(n.td,{children:"Singularity/Apptainer issues"}),(0,i.jsx)(n.td,{children:"Verify container runtime installation"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"File system errors"})}),(0,i.jsx)(n.td,{children:"Storage or permission issues"}),(0,i.jsx)(n.td,{children:"Check disk space and file permissions"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,i.jsx)(n.p,{children:"If you encounter issues:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Check the logs"}),": Review Snakemake and job-specific logs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Validate configuration"}),": Run ",(0,i.jsx)(n.code,{children:"snakemake --lint"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Review documentation"}),": Check this guide and workflow documentation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Open an issue"}),": Report problems on the ",(0,i.jsx)(n.a,{href:"https://github.com/tucca-cellag/tucca-rna-seq/issues",children:"GitHub repository"})]}),"\n"]}),"\n",(0,i.jsx)(l.A,{label:"View the Official Snakemake FAQ",link:"https://snakemake.readthedocs.io/en/stable/project_info/faq.html",variant:"primary",className:"button--block",style:{marginTop:"10px"}}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.p,{children:"After successfully running your workflow:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Review Results"}),": Examine quality control reports and analysis outputs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Post-Analysis Tools"}),": Use the provided RMarkdown notebooks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Custom Analysis"}),": Extend the workflow with your own scripts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Share Results"}),": Export data files and create custom visualizations"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For more advanced usage and customization, see the ",(0,i.jsx)(n.a,{href:"./install-and-config/configuration",children:"Advanced Configuration"})," guide."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},7138:(e,n,s)=>{s.d(n,{A:()=>t});s(6540);var r=s(4164),i=s(4848);function t({children:e,className:n,style:s}){return(0,i.jsx)("div",{className:"container center",children:(0,i.jsx)("div",{className:(0,r.A)("row",n),style:s,children:e})})}},7261:(e,n,s)=>{s.d(n,{A:()=>t});s(6540);var r=s(4164),i=s(4848);const t=({className:e,style:n,children:s,textAlign:t,variant:l,italic:o=!1,noDecoration:a=!1,transform:c,breakWord:d=!1,truncate:u=!1,weight:h})=>{const m=t?`text--${t}`:"",p=l?`text--${l}`:"",x=o?"text--italic":"",f=a?"text-no-decoration":"",j=c?`text--${c}`:"",g=d?"text--break":"",v=u?"text--truncate":"",k=h?`text--${h}`:"";return(0,i.jsx)("div",{className:(0,r.A)("card__footer",e,m,j,p,x,f,g,v,k),style:n,children:s})}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var r=s(6540);const i={},t=r.createContext(i);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:n},e.children)}},9223:(e,n,s)=>{s.d(n,{A:()=>t});s(6540);var r=s(4164),i=s(4848);const t=({className:e,style:n,children:s,textAlign:t,variant:l,italic:o=!1,noDecoration:a=!1,transform:c,breakWord:d=!1,truncate:u=!1,weight:h})=>{const m=t?`text--${t}`:"",p=l?`text--${l}`:"",x=o?"text--italic":"",f=a?"text-no-decoration":"",j=c?`text--${c}`:"",g=d?"text--break":"",v=u?"text--truncate":"",k=h?`text--${h}`:"";return(0,i.jsx)("div",{className:(0,r.A)("card__header",e,m,j,p,x,f,g,v,k),style:n,children:s})}},9365:(e,n,s)=>{s.d(n,{A:()=>l});s(6540);var r=s(4164);const i={tabItem:"tabItem_Ymn6"};var t=s(4848);function l({children:e,hidden:n,className:s}){return(0,t.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,s),hidden:n,children:e})}},9823:(e,n,s)=>{s.d(n,{A:()=>t});s(6540);var r=s(4164),i=s(4848);function t({children:e,className:n,style:s}){return(0,i.jsx)("div",{className:(0,r.A)("col",n),style:s,children:e})}},9959:(e,n,s)=>{s.d(n,{A:()=>t});s(6540);var r=s(4164),i=s(4848);const t=({className:e,style:n,children:s,shadow:t})=>{const l=t?`item shadow--${t}`:"";return(0,i.jsx)("div",{className:(0,r.A)("card",e,l),style:n,children:s})}}}]);